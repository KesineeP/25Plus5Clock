{"version":3,"sources":["components/Timer.js","components/Setting.js","App.js","index.js"],"names":["Timer","timerSecond","timerMinute","onResetTimer","isSession","setIsTimerOn","isTimerOn","stopTimer","id","className","onClick","Setting","breakInterval","sessionLength","onIncreaseBreakLength","onDecreaseBreakLength","onIncreaseSessionLength","onDecreaseSessionLength","App","useState","breakLength","setBreakLength","setSessionLength","minute","second","timer","setTimer","setIsSession","audioRef","useRef","useEffect","interval","setInterval","onDecreaseTimer","clearInterval","current","play","onToggleInterval","prev","console","log","load","startStopTimer","ref","src","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb02793f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Timer = ({ timerSecond, timerMinute, onResetTimer, isSession, setIsTimerOn, isTimerOn }) => {\n\n\n    const startTimer = () => {\n        setIsTimerOn(true);\n    }\n\n    const stopTimer = () => {\n        setIsTimerOn(false);\n    }\n    const resetTimer = () => {\n        stopTimer();\n        onResetTimer();\n    }\n    // console.log(timerMinute)\n    // console.log(timerSecond)\n\n\n    return (\n        <div id=\"timer-container\">\n            <div className=\"timer\">\n                <div>\n                    <h2 id=\"timer-label\">{isSession ? \"Session\" : \"Break\"}</h2>\n                </div>\n                <div id=\"time-left\">\n                    {timerMinute === 0 ? \"00\" : timerMinute < 10 ? \"0\" + timerMinute : timerMinute}\n                    :\n                    {timerSecond === 0 ? \"00\" : timerSecond < 10 ? \"0\" + timerSecond : timerSecond}\n                </div>\n            </div>\n            <section className=\"button-action\">\n                {!isTimerOn ?\n                    <button id=\"start_stop\" onClick={startTimer}>Start</button> :\n                    <button id=\"start_stop\" onClick={stopTimer}>Stop</button>}\n                <button id=\"reset\" onClick={resetTimer}>Reset</button>\n            </section>\n\n\n        </div >\n    )\n}\n\nexport default Timer\n","import React from 'react'\n\nconst Setting = ({ breakInterval, sessionLength, onIncreaseBreakLength, onDecreaseBreakLength, onIncreaseSessionLength, onDecreaseSessionLength }) => {\n    const decreaseBreak = () => {\n        if (breakInterval === 1) return\n        onDecreaseBreakLength()\n\n    };\n    const increaseBreak = () => {\n        if (breakInterval === 60) return;\n        onIncreaseBreakLength()\n    }\n    const decreaseSession = () => {\n        if (sessionLength === 1) return;\n        onDecreaseSessionLength(sessionLength + 1)\n    };\n    const increaseSession = () => {\n        if (sessionLength === 60) return;\n        onIncreaseSessionLength(sessionLength - 1)\n    }\n    return (\n        <div className='setting'>\n            <div className=\"break-session\">\n                <div id=\"break-label\" className=\"label\">Break Length</div>\n                <div className=\"setting-button\">\n                    <button id=\"break-decrement\" onClick={decreaseBreak}>-</button>\n                    <span id=\"break-length\">{breakInterval}</span>\n                    <button id=\"break-increment\" onClick={increaseBreak}>+</button>\n                </div>\n            </div>\n            <div className=\"break-session\">\n                <div id=\"session-label\" className=\"label\">Session Length</div>\n                <div className=\"setting-button\">\n                    <button id=\"session-decrement\" onClick={decreaseSession}>-</button>\n                    <span id=\"session-length\">{sessionLength}</span>\n                    <button id=\"session-increment\" onClick={increaseSession}>+</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Setting;\n","import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport Timer from './components/Timer.js'\nimport Setting from './components/Setting.js';\n\nconst App = () => {\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [timer, setTimer] = useState({ minute: sessionLength, second: 0 });\n  const [isTimerOn, setIsTimerOn] = useState(false);\n  const [isSession, setIsSession] = useState(true);\n  const audioRef = useRef(null);\n\n\n  useEffect(() => {\n    if (isTimerOn) {\n      const interval = setInterval(() => onDecreaseTimer(timer.minute, timer.second), 1000);\n      return () => clearInterval(interval);\n    }\n\n  }, [isTimerOn, timer.minute, timer.second]);\n\n  useEffect(() => {\n    if (timer.minute === 0 && timer.second === 0) audioRef.current.play()\n  }, [timer.second, timer.minute])\n\n  const onIncreaseBreakLength = () => {\n    setBreakLength((prev) => prev + 1);\n\n  };\n  const onDecreaseBreakLength = () => {\n    setBreakLength((prev) => prev - 1);\n  }\n  const onIncreaseSessionLength = () => {\n    setSessionLength((prev) => prev + 1);\n    setTimer({ ...timer, minute: sessionLength + 1 })\n  };\n  const onDecreaseSessionLength = () => {\n    setSessionLength((prev) => {\n      return prev - 1\n    });\n    setTimer((prev) => {\n      return { ...timer, minute: prev.minute - 1 }\n    })\n  }\n\n  const onDecreaseTimer = () => {\n    switch (timer.second) {\n      case 0:\n        if (timer.minute === 0) {\n          if (isSession) {\n            setIsSession(false);\n            onToggleInterval(isSession);\n          } else {\n            setIsSession(true);\n            onToggleInterval(isSession);\n          }\n\n        } else {\n          setTimer((prev) => {\n            console.log('prev', prev)\n            return { minute: prev.minute - 1, second: 59 }\n          })\n        }\n        break;\n      default:\n        setTimer((prev) => {\n          return { ...timer, second: prev.second - 1 }\n        })\n        break;\n    }\n  };\n\n\n  const onToggleInterval = (isSession) => {\n    if (isSession) {\n      setTimer({ ...timer, minute: breakLength })\n    } else {\n      setTimer({ ...timer, minute: sessionLength })\n    }\n  }\n  const onResetTimer = () => {\n    console.log('Reset btn clicked')\n    setSessionLength(25)\n    setBreakLength(5)\n    setTimer({ minute: 25, second: 0 })\n    setIsSession(true)\n    audioRef.current.load()\n  }\n  const onStartStopTimer = (isTimerOn) => {\n    setIsTimerOn(isTimerOn)\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"header\">\n        <h2>Pomodoro Clock</h2>\n        <p>Be productive</p>\n      </div>\n      <Setting\n        breakInterval={breakLength}\n        sessionLength={sessionLength}\n        onIncreaseBreakLength={onIncreaseBreakLength}\n        onDecreaseBreakLength={onDecreaseBreakLength}\n        onIncreaseSessionLength={onIncreaseSessionLength}\n        onDecreaseSessionLength={onDecreaseSessionLength}\n        isTimerOn={isTimerOn} />\n      <Timer\n        timerMinute={timer.minute}\n        timerSecond={timer.second}\n        onResetTimer={onResetTimer}\n        startStopTimer={onStartStopTimer}\n        isTimerOn={isTimerOn}\n        setIsTimerOn={setIsTimerOn}\n        isSession={isSession}\n      />\n      <audio id=\"beep\" ref={audioRef} src=\"https://onlineclock.net/audio/options/default.mp3\" type=\"audio/mpeg\">\n      </audio>\n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}